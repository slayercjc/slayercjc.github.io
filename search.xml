<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Linux下复制与粘贴</title>
      <link href="/2018/11/18/Linux%E4%B8%8B%E5%A4%8D%E5%88%B6%E4%B8%8E%E7%B2%98%E8%B4%B4/"/>
      <url>/2018/11/18/Linux%E4%B8%8B%E5%A4%8D%E5%88%B6%E4%B8%8E%E7%B2%98%E8%B4%B4/</url>
      
        <content type="html"><![CDATA[<p>yy复制当前行<br>yw复制一个单词<br>y$复制光标到结尾<br>y^复制光标到行首<br>+yy复制+行<br>+yw复制+个单词<br>m,ny复制m到n行内容。</p><p>粘贴为“p”</p>]]></content>
      
      
      <categories>
          
          <category> 技术文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>执行service iptables start出现redirecting to systemctl ...Failed to ...not loaded.</title>
      <link href="/2018/11/18/%E6%89%A7%E8%A1%8Cservice-iptables-start%E5%87%BA%E7%8E%B0redirecting-to-systemctl-Failed-to-not-loaded/"/>
      <url>/2018/11/18/%E6%89%A7%E8%A1%8Cservice-iptables-start%E5%87%BA%E7%8E%B0redirecting-to-systemctl-Failed-to-not-loaded/</url>
      
        <content type="html"><![CDATA[<p>在centOS 7系统中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br></pre></td></tr></table></figure><p>发现出错。</p><p>解决办法： </p><p>切换到root用户下，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-service</span><br><span class="line">service <span class="built_in">enable</span> iptables //设置开机启动</span><br></pre></td></tr></table></figure><p>之后就可以使用以下指令了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables [start|stop|restart|save]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CentOS7+Nginx设置Systemctl restart nginx.service服务</title>
      <link href="/2018/11/18/CentOS7-Nginx%E8%AE%BE%E7%BD%AESystemctl-restart-nginx-service%E6%9C%8D%E5%8A%A1/"/>
      <url>/2018/11/18/CentOS7-Nginx%E8%AE%BE%E7%BD%AESystemctl-restart-nginx-service%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>centos 7以上是用Systemd进行系统初始化的，Systemd 是 Linux 系统中最新的初始化系统（init），它主要的设计目标是克服 sysvinit 固有的缺点，提高系统的启动速度。关于Systemd的详情介绍在这里。</p><p>Systemd服务文件以.service结尾，比如现在要建立nginx为开机启动，如果用yum install命令安装的，yum命令会自动创建nginx.service文件，直接用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemcel <span class="built_in">enable</span> nginx.service</span><br></pre></td></tr></table></figure><a id="more"></a><p>设置开机启动即可。<br>在这里我是用源码编译安装的，所以要手动创建nginx.service服务文件。<br>开机没有登陆情况下就能运行的程序，存在系统服务（system）里，即：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/lib/systemd/system/</span><br></pre></td></tr></table></figure><h2 id="1-在系统服务目录里创建nginx-service文件"><a href="#1-在系统服务目录里创建nginx-service文件" class="headerlink" title="1.在系统服务目录里创建nginx.service文件"></a>1.在系统服务目录里创建nginx.service文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/<span class="built_in">local</span>/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>Description:描述服务</p><p>After:描述服务类别</p><p>[Service]服务运行参数的设置</p><p>Type=forking是后台运行的形式</p><p>ExecStart为服务的具体运行命令</p><p>ExecReload为重启命令</p><p>ExecStop为停止命令</p><p>PrivateTmp=True表示给服务分配独立的临时空间</p><p>注意：[Service]的启动、重启、停止命令全部要求使用绝对路径</p><p>[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</p><p>保存退出。</p><h2 id="2-设置开机启动"><a href="#2-设置开机启动" class="headerlink" title="2.设置开机启动"></a>2.设置开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx.service</span><br></pre></td></tr></table></figure><h2 id="3-其他命令"><a href="#3-其他命令" class="headerlink" title="3.其他命令"></a>3.其他命令</h2><p>启动nginx服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure><p>设置开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx.service</span><br></pre></td></tr></table></figure><p>停止开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> nginx.service</span><br></pre></td></tr></table></figure><p>查看服务当前状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx.service</span><br></pre></td></tr></table></figure><p>重新启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure><p>查看所有已启动的服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>让你拥有一个免费的博客 hexo安装+绑定免费顶级域名</title>
      <link href="/2018/11/11/%E8%AE%A9%E4%BD%A0%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2-hexo%E5%AE%89%E8%A3%85-%E7%BB%91%E5%AE%9A%E5%85%8D%E8%B4%B9%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8D/"/>
      <url>/2018/11/11/%E8%AE%A9%E4%BD%A0%E6%8B%A5%E6%9C%89%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2-hexo%E5%AE%89%E8%A3%85-%E7%BB%91%E5%AE%9A%E5%85%8D%E8%B4%B9%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="1-首先下载-Git-和-Node-js"><a href="#1-首先下载-Git-和-Node-js" class="headerlink" title="1.首先下载 Git 和 Node.js"></a>1.首先下载 <a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a> 和 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Git下载地址：http://git-scm.com/</span><br><span class="line">Node.js下载地址：http://nodejs.org/</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>下载完后都默认安装就可以了！</p></blockquote><h2 id="2-打开桌面的Git-Bash"><a href="#2-打开桌面的Git-Bash" class="headerlink" title="2.打开桌面的Git Bash"></a>2.打开桌面的Git Bash</h2><p><img src="https://i.imgur.com/mQb7265.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="3-初始化"><a href="#3-初始化" class="headerlink" title="3.初始化"></a>3.初始化</h2><blockquote><p>你要把博客放在哪个盘就在哪个盘符下右键点击Git Bash Here</p></blockquote><p><img src="https://i.imgur.com/46HLwti.png" alt=""></p><p>然后输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure></p><blockquote><p>注意blog只是个名字，你想换别的名字也可以，例如：hexo init aaa</p></blockquote><p>初始化完成关闭 Git Bash Here，然后进入刚才初始化生成的博客目录，比如<code>f:/blog;f:/aaa</code>,再右键点击Git Bash Here</p><p>然后输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><h2 id="4-启动本地博客"><a href="#4-启动本地博客" class="headerlink" title="4.启动本地博客"></a>4.启动本地博客</h2><p>分别输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><blockquote><p>hexo g 的意思是生成静态文件。<br>hexo s 的意思是启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a></p></blockquote><h2 id="5-发布到Github"><a href="#5-发布到Github" class="headerlink" title="5.发布到Github"></a>5.发布到Github</h2><h3 id="1-首先打开Git-Bash初始化"><a href="#1-首先打开Git-Bash初始化" class="headerlink" title="1.首先打开Git Bash初始化"></a>1.首先打开Git Bash初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;John Doe&quot;</span><br><span class="line">$ git config --global user.email johndoe@example.com</span><br></pre></td></tr></table></figure><blockquote><p>“John Doe” 和 <a href="mailto:johndoe@example.com" target="_blank" rel="noopener">johndoe@example.com</a> 输入你的名字和邮箱</p></blockquote><h3 id="2接下来配置github发布秘钥"><a href="#2接下来配置github发布秘钥" class="headerlink" title="2接下来配置github发布秘钥"></a>2接下来配置github发布秘钥</h3><p>打开Git Bash输入<code>ssh-keygen -t rsa -C &quot;username&quot;</code> </p><blockquote><p>(注：username为你git上的用户名)</p></blockquote><blockquote><p>如果执行成功。返回：<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/Users/username/.ssh/id_rsa): //这里的username是电脑上的用户名，这个地址也是文件的存储地址，然后我们按回车。</p></blockquote><blockquote><p>如果你以前有存储地址会返回:/Users/your username/.ssh/id_rsa already exists.Overwrite (y/n)? //直接输入y回车。</p></blockquote><blockquote><p>如果以前没有储存地址就会出现:<br>Enter passphrase(empty for no passphrase): //也直接回车，两种情况回车后都会出现 Enter same passphrase again 然后接着回车会显示一长串内容其中还有一些..o.. o oo .oS. 之类的代码，这说明SSH key就已经生成了。</p></blockquote><blockquote><p>文件目录就是：c:/User/username/.ssh/id_rsa.pub</p></blockquote><h3 id="3-打开Github官网注册账号，然后登录并创建仓库"><a href="#3-打开Github官网注册账号，然后登录并创建仓库" class="headerlink" title="3.打开Github官网注册账号，然后登录并创建仓库"></a>3.打开<a href="www.github.com">Github</a>官网注册账号，然后登录并创建仓库</h3><p><img src="https://i.imgur.com/o9nJ3sr.png" alt=""></p><p><img src="https://i.imgur.com/ZopSEoj.png" alt=""></p><blockquote><p>红色部分的名字得和你用户名一样，后面的github.io是固定不变的，因为我之前创建过了所以会报错，你们没创建过就不会有错误提示，写好了以后点下面的绿色按钮Create repository</p></blockquote><h3 id="4-绑定Github"><a href="#4-绑定Github" class="headerlink" title="4.绑定Github"></a>4.绑定Github</h3><h4 id="4-1进入设置（Settings）找到"><a href="#4-1进入设置（Settings）找到" class="headerlink" title="4.1进入设置（Settings）找到"></a>4.1进入设置（Settings）找到</h4><p><img src="https://i.imgur.com/fUs3MU9.png" alt=""></p><h4 id="4-2复制秘钥"><a href="#4-2复制秘钥" class="headerlink" title="4.2复制秘钥"></a>4.2复制秘钥</h4><blockquote><p>然后将刚生成的<code>c:/User/username/.ssh/id_rsa.pub</code>文件用记事本打开复制所有内容</p></blockquote><h4 id="4-3-然后将你复制的内容粘贴到key中"><a href="#4-3-然后将你复制的内容粘贴到key中" class="headerlink" title="4.3 然后将你复制的内容粘贴到key中"></a>4.3 然后将你复制的内容粘贴到key中</h4><p><img src="https://i.imgur.com/jhG1Fij.png" alt=""><br><img src="https://i.imgur.com/7K3JOFF.png" alt=""></p><blockquote><p>再点击Add SSH Key<br>ok还有最后一步</p></blockquote><h4 id="4-4-测试是否和Github绑定成功"><a href="#4-4-测试是否和Github绑定成功" class="headerlink" title="4.4 测试是否和Github绑定成功"></a>4.4 测试是否和Github绑定成功</h4><p>打开Git Bash 输入<code>ssh -T git@github.com</code>如果看到以下画面就说明成功了。<br><img src="https://i.imgur.com/aD67KHG.png" alt=""></p><h3 id="5-修改hexo文件"><a href="#5-修改hexo文件" class="headerlink" title="5.修改hexo文件"></a>5.修改hexo文件</h3><p>进入第3步初始化的博客目录找到<code>_config.yml</code>文件，用编辑器打开修改<br><code>deploy</code>和<code>type</code>字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: 这里是你Github的地址</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><blockquote><p>repo地址怎么找？打开你的Github，找到刚创建的项目<br><img src="https://i.imgur.com/ja91Dco.png" alt=""></p></blockquote><h3 id="6-安装git插件"><a href="#6-安装git插件" class="headerlink" title="6.安装git插件"></a>6.安装git插件</h3><p>打开 Git Bash执行下面代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><h3 id="7-同步到Github"><a href="#7-同步到Github" class="headerlink" title="7.同步到Github"></a>7.同步到Github</h3><p>在本地博客目录右键打开Git Bash，输入<code>hexo g</code>再输入<code>hexo d</code>,等待片刻本地博客就同步到Github了，然后输入网址：<code>username.github.io</code>就可以访问了，这里的username改成你的创建仓库时候的名字。</p><blockquote><p>例如：我的就是 slayercjc.github.io</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 免费 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MarkdownPad2 破解版</title>
      <link href="/2018/11/11/MarkdownPad2%20%E7%A0%B4%E8%A7%A3%E7%89%88/"/>
      <url>/2018/11/11/MarkdownPad2%20%E7%A0%B4%E8%A7%A3%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h2 id="MarkdownPad2下载地址"><a href="#MarkdownPad2下载地址" class="headerlink" title="MarkdownPad2下载地址:"></a>MarkdownPad2下载地址:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://pan.baidu.com/s/1eSKXqka</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="注册码："><a href="#注册码：" class="headerlink" title="注册码："></a>注册码：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Email address :Soar360@live.com </span><br><span class="line">License key : GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</span><br></pre></td></tr></table></figure><blockquote><p>如果是win10还需要安装一个组件 awesomium_v1.6.6_sdk_win，否则会出现错误提示!<br>awesomium下载地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://pan.baidu.com/s/1qY7LKba</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>如果是英文版，可到tools-&gt;options修改，再重启即可</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdownpad2 </tag>
            
            <tag> 破解版 </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
